(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{FuBf:function(t,e,a){"use strict";a("fBYg")},fBYg:function(t,e,a){},uPQO:function(t,e,a){"use strict";var s=a("9f/t"),n=a("PN1e"),i=a("PjKf"),o=a("ogxq"),r=a("EQT1"),l={data:()=>({moment:moment,isDirty:!1,validations:new Map,lookups:{parents:[],children:[]},busy:!1,item:{parentId:null,childId:null,dateStart:null,dateEnd:null,notes:null}}),computed:{formIsValid(){const t=this,e=t.item,a=new Map;return e.parentId||a.set("parentId","Parent is required."),e.childId||a.set("childId","Child is required."),e.dateStart||a.set("dateStart","Start Date is required."),e.dateEnd||a.set("dateEnd","End Date is required."),t.isDirty=!0,t.validations=a,0==a.size}},methods:{getValidClass(t){return this.isDirty?this.validations.has(t)?"is-invalid":"is-valid":""},reset(){const t=this;t.isDirty=!1,t.validations.clear(),t.item={parentId:null,childId:null,dateStart:null,dateEnd:null,notes:null}},async open(t){const e=this;e.reset(),e.item=t,await e.getParents(),e.$refs.modal.show()},close(){this.$refs.modal.hide()},async getParents(){const t=this;await t.$util.axios.get("/api/clinics/parents").then((e=>t.lookups.parents=e.data))},async getParentChildren(t){const e=this;await e.$util.axios.get(`/api/clinics/parents/${e.item.parentId}/children`).then((t=>{e.lookups.children=t.data,1===e.lookups.children.length&&(e.item.childId=e.lookups.children[0].id)}))},async save(){const t=this;if(!t.busy&&t.formIsValid)try{t.busy=!0;const e=t.$util.clone(t.item);e.clinicId=t.id,e.dateStart=moment(e.dateStart).utc(),e.dateEnd=moment(e.dateEnd).utc(),await t.$util.axios.post("/api/appointments/clinic/request",e).then((async e=>{t.$bvToast.toast("Appointment requested.",{title:"Request Appointment",variant:"success",toaster:"b-toaster-bottom-right"}),t.$emit("saved"),t.close()}))}catch(e){t.$util.handleError(e)}finally{t.busy=!1}}}},d=a("KHd+"),c=Object(d.a)(l,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("b-modal",{ref:"modal",attrs:{"no-close-on-esc":!1,"no-close-on-backdrop":!0,scrollable:""},scopedSlots:t._u([{key:"modal-header",fn:function(){return[a("div",{staticClass:"w-100"},[a("div",{staticClass:"d-flex flex-row  align-items-center justify-content-between"},[a("h5",{staticClass:"m-0"},[t._v("\n                    Book Appointment\n                ")])])])]},proxy:!0},{key:"modal-footer",fn:function(){return[a("button",{staticClass:"btn btn-primary",attrs:{disabled:t.isDirty&&!t.formIsValid},on:{click:t.save}},[a("span",{staticClass:"fas fa-fw fa-save"})]),t._v(" "),a("button",{staticClass:"btn btn-secondary",on:{click:t.$refs.modal.hide}},[t._v("\n            Close\n        ")])]},proxy:!0}])},[t._v(" "),t._v(" "),a("div",[a("div",{staticClass:"form-row"},[a("div",{staticClass:"form-group col-md"},[a("label",{attrs:{for:"parentId"}},[t._v("Parent")]),t._v(" "),a("div",[a("b-form-select",{class:t.getValidClass("parentId"),attrs:{options:t.lookups.parents,"value-field":"id","text-field":"name",id:"parentId"},on:{change:function(e){return t.getParentChildren(t.item.parentId)}},model:{value:t.item.parentId,callback:function(e){t.$set(t.item,"parentId",e)},expression:"item.parentId"}}),t._v(" "),t.validations.has("parentId")?a("div",{staticClass:"invalid-feedback"},[t._v("\n                        "+t._s(t.validations.get("parentId"))+"\n                    ")]):t._e()],1)]),t._v(" "),a("div",{staticClass:"form-group col-md"},[a("label",{attrs:{for:"childId"}},[t._v("Child")]),t._v(" "),a("div",[a("b-form-select",{class:t.getValidClass("childId"),attrs:{options:t.lookups.children,"value-field":"id","text-field":"name",id:"childId"},model:{value:t.item.childId,callback:function(e){t.$set(t.item,"childId",e)},expression:"item.childId"}}),t._v(" "),t.validations.has("childId")?a("div",{staticClass:"invalid-feedback"},[t._v("\n                        "+t._s(t.validations.get("childId"))+"\n                    ")]):t._e()],1)])]),t._v(" "),a("div",{staticClass:"form-row"},[a("div",{staticClass:"form-group col-sm"},[a("label",{attrs:{for:"dateStart"}},[t._v("Start")]),t._v(" "),a("div",[a("div",{staticClass:"form-control",attrs:{type:"text"}},[t._v("\n                        "+t._s(t._f("moment")(t.item.dateStart,"calendar"))+"\n                    ")])])]),t._v(" "),a("div",{staticClass:"form-group col-sm"},[a("label",{attrs:{for:"dateEnd"}},[t._v("End")]),t._v(" "),a("div",[a("div",{staticClass:"form-control",attrs:{type:"text"}},[t._v("\n                        "+t._s(t._f("moment")(t.item.dateEnd,"calendar"))+"\n                    ")])])])]),t._v(" "),a("div",{staticClass:"form-group"},[a("label",{attrs:{for:"notes"}},[t._v("Notes")]),t._v(" "),a("div",[a("textarea",{directives:[{name:"model",rawName:"v-model",value:t.item.notes,expression:"item.notes"}],staticClass:"form-control",attrs:{rows:"3"},domProps:{value:t.item.notes},on:{input:function(e){e.target.composing||t.$set(t.item,"notes",e.target.value)}}})])])])])}),[],!1,null,null,null).exports,m=a("2iVA"),u={mixins:[r.a],props:{uid:{type:String,required:!0},pedia:{type:Boolean,required:!0}},components:{FullCalendar:s.a,modalAdd:c,modalView:m.a},data(){return{calendarOptions:{contentHeight:"auto",plugins:[n.b,i.a,o.a],headerToolbar:{left:"prev,next today",center:"title",right:"dayGridMonth,timeGridWeek,timeGridDay"},nowIndicator:!0,allDaySlot:!1,initialView:"timeGridWeek",slotMinTime:"06:00:00",slotMaxTime:"20:00:00",businessHours:!0,selectConstraint:"businessHours",eventConstraint:!0,datesSet:this.datesSet,eventOverlap:!1,eventSources:[{events:this.getAppointments}],editable:!0,selectable:!0,selectMirror:!0,dayMaxEvents:!0,weekends:!0,select:this.onClickCalendar,eventClick:this.onClickEvent,eventChange:this.eventChanged},clinic:{},items:[]}},computed:{viewMode(){return this.pedia?"pedia":"staff"}},async created(){const t=this;var e=JSON.parse(localStorage.getItem("calendar:settings"))||{};t.calendarOptions.initialView=e.viewType,t.$bus.$on("event:appointment-updated",(async e=>{await t.refresh()}))},async mounted(){await this.getClinicInfo()},methods:{async refresh(){this.$refs.fullCalendar.getApi().refetchEvents()},async datesSet(t){var e={start:t.start,end:t.end,viewType:t.view.type};localStorage.setItem("calendar:settings",JSON.stringify(e))},async eventChanged(t){const e=this,a=t.event.extendedProps.item;if(a.status>2)return void t.revert();const s={appointmentId:a.appointmentId,token:a.token,dateStart:moment(t.event.start),dateEnd:moment(t.event.end)};try{await e.$util.axios.put("/api/appointments/",s),e.$bvToast.toast("Appointment updated.",{title:"Edit Appointment Date",variant:"success",toaster:"b-toaster-bottom-right"})}catch(a){e.$util.handleError(a),t.revert()}},async onClickCalendar(t){if(t.allDay)return;const e=this,a=moment(t.start),s=moment(t.end);a.isBefore()?e.$bvToast.toast("Cannot book appointment in the past, move on let go..",{title:"Book Appointment",variant:"warning"}):e.$refs.modalAdd.open({dateStart:a.format("YYYY-MM-DDTHH:mm"),dateEnd:s.format("YYYY-MM-DDTHH:mm")})},async onClickEvent(t){this.$refs.modalView.open(t.event.id)},getEventBg(t){let e="";switch(t.status){case 1:case 2:e="magenta";break;case 3:case 4:e="silver";break;case 5:case 6:e="red";break;case 7:e="blue";break;case 8:e="green";break;case 9:e="bluegreen"}return e},async getClinicInfo(){const t=this;await t.$util.axios.get("/api/clinics/my-clinic").then((e=>t.clinic=e.data)),t.calendarOptions.businessHours=t.clinic.businessHours,t.calendarOptions.eventConstraint=t.clinic.businessHours},async getAppointments(t){const e=this;try{const a=["?c=","&p=",1,"&s=",100,"&sf=","&so=",-1,"&ds=",moment(t.start).valueOf(),"&de=",moment(t.end).valueOf()].join("");return await e.$util.axios.get(`/api/appointments/clinic/search/${a}`).then((t=>{e.items=t.data.items;return t.data.items.map((t=>({id:t.appointmentId,title:`${t.referenceNumber}`,description:`${t.statusText}: ${t.parent.name} - ${t.child.name}`,start:moment(t.dateStart).format("YYYY-MM-DDTHH:mm"),end:moment(t.dateEnd).format("YYYY-MM-DDTHH:mm"),color:"red",color:e.getEventBg(t),item:t,eventDidMount:function(){}})))}))}catch(t){e.$util.handleError(t)}}}},p=(a("FuBf"),Object(d.a)(u,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{},[a("div",{staticClass:"d-flex flex-row justify-content-between"},[t._m(0),t._v(" "),a("div",{staticClass:"text-right"},[a("b-overlay",{attrs:{show:t.busy}},[a("button",{staticClass:"btn btn-info",on:{click:t.refresh}},[a("span",{staticClass:"fas fa-fw fa-sync"})]),t._v(" "),a("button",{staticClass:"btn btn-secondary",on:{click:t.close}},[a("span",{staticClass:"fas fa-fw fa-times-circle"})])])],1)]),t._v(" "),a("div",{staticClass:"mt-2"},[a("full-calendar",{ref:"fullCalendar",attrs:{options:t.calendarOptions}})],1),t._v(" "),a("modal-add",{ref:"modalAdd"}),t._v(" "),a("modal-view",{ref:"modalView",attrs:{uid:t.uid,viewMode:t.viewMode}})],1)}),[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("h1",{staticClass:"h3 mb-sm-0"},[a("i",{staticClass:"fas fa-fw fa-calendar mr-1"}),t._v("Appointments\n        ")])}],!1,null,"fa219fbe",null));e.a=p.exports}}]);